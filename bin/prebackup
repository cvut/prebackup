#!/bin/bash
set -e

# Run in clean environment.
[ -n "$HOME" ] && exec -c "$@"

if [ ! -f "$1" ]; then
	echo 'ERROR: Argument $1 is not set or not a file!' >&2
	exit 2
fi

readonly SHARE_DIR='/usr/local/share/prebackup'
readonly SCRIPT_FILE="$1"; shift
readonly SCRIPT_DIR="$(cd "$(dirname "$SCRIPT_FILE")" && pwd)"

configs=(
	'/etc/bacula/prebackup.conf'
	"${SCRIPT_DIR}/config"
)
if [ -f "$2" ]; then
	configs+=(":$2"); shift
fi
command="$(basename "$SCRIPT_FILE")"

# Global variables that may be overriden by a config file or CLI arguments,
# but these are set to read-only after the setup phase.
NAME="$(basename "$SCRIPT_DIR")"
SYSLOG='yes'
TARGET_DIR='/var/tmp/backup'
TEMP_DIR='/tmp/prebackup'
VERBOSE='no'

# Include shared utils.
source "$SHARE_DIR/utils.sh"

# Include config files.
for file in "${configs[@]}"; do
	if [ -f "$file" ]; then
		debug "Loading variables from: $(readlink -f $file)"
		source "$file"
	else
		debug "Config file '$file' does not exist."
	fi
done

# Assign default values if not set.
: ${SYSLOG_TAG:=backup:$NAME}
: ${target_dir:=$TARGET_DIR/$NAME}
: ${temp_dir:=$TEMP_DIR/$NAME}

while [ $# -gt 0 ]; do
	case $1 in
		-c | --command)
			command=$2
			shift 2
		;;
		-S | --no-syslog)
			SYSLOG='no'
			shift
		;;
		-v | --verbose)
			VERBOSE='yes'
			shift
		;;
		-*)
			fail "Unknown option $1" 2
		;;
	esac
done

readonly NAME SYSLOG SYSLOG_TAG TARGET_DIR TEMP_DIR VERBOSE

# Include actual script (hook) file.
source "$SCRIPT_FILE"

if [ "$SYSLOG" = 'yes' ]; then
	# Close file descriptor for STDOUT and STDERR.
	exec 1<&-
	exec 2<&-

	# Redirect STDOUT to syslog.
	exec 1> >(logger -i -t "${SYSLOG_TAG}")

	# Redirect STDERR to STDOUT.
	exec 2>&1
fi

# Prepare directories
mkdir -p "$temp_dir" "$target_dir"
chmod 750 "$TEMP_DIR" "$TARGET_DIR"

# Run setup hook if defined.
if type -t setup &>/dev/null; then
	setup
fi

case "$command" in
	pre-backup | post-backup)
		info "Running $command for $NAME"
		eval $command
		;;
	*)
		fail "Unknown command: $command"
		;;
esac
